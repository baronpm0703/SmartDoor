<style>
        #drop-area {
            border: 2px dashed #ccc;
            border-radius: 8px;
            padding: 20px;
            cursor: pointer;
        }

        #drop-area.hover {
            background-color: #f0f8ff; /* Light Blue */
        }
    </style>
<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">Thông tin cá nhân</h4>

    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <h5 class="card-header">Chi tiết</h5>
                <!-- Account -->
                <div class="card-body">
                    <div class="d-flex align-items-start align-items-sm-center gap-4">
                        <img src="{{#if account.url}}{{account.url}}{{else}}/img/avt.jpg{{/if}}"
                            alt="user-avatar" class="d-block rounded" height="100" width="100" id="uploadedAvatar" />
                        <div class="button-wrapper">
                            <label for="upload" class="btn btn-primary me-2 mb-4" tabindex="0" data-bs-toggle="modal" data-bs-target="#modalId">
                                <span class="d-sm-block">Tải lên ảnh mới</span>
                                <i class="bx bx-upload d-block d-sm-none"></i>
                            </label>
                            <button type="button" class="btn btn-outline-secondary account-image-reset mb-4">
                                <i class="bx bx-reset d-block d-sm-none"></i>
                                <span class="d-sm-block">Reset</span>
                            </button>

                            <p class="text-muted mb-0">Cho phép JPG, GIF hoặc PNG. Kích thước tối đa 800KB</p>
                        </div>
                    </div>
                </div>
                <hr class="my-0" />
                <div class="card-body">
                    <form id="formAccountSettings" onsubmit="accSettings(event)">
                        <div class="row">
                            <div class="mb-3 col-md-6">
                                <label for="name" class="form-label">Tên</label>
                                <input class="form-control" type="text" id="name" name="username"
                                    value="{{account.username}}" />
                            </div>
                        </div>
                        <div class="mt-2">
                            <input type="text" name="uid" value="{{account.UID}}" hidden>
                            <button type="submit" class="btn btn-primary me-2">Lưu</button>
                            <button type="reset" class="btn btn-outline-secondary">Hủy</button>
                        </div>
                    </form>
                </div>
                <!-- /Account -->
            </div>

        </div>
    </div>
</div>

    <!-- Upload Modal -->
    <div class="modal fade" id="modalId" tabindex="-1" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
        <form id="ReportForm" enctype="multipart/form-data">
            <div class="modal-dialog modal-dialog-centered  modal-sm" role="document" style="width: 70%; margin-left: auto; margin-right: auto;">
                <div class="modal-content">
                    <div class="modal-header d-flex flex-column">
                        <div class="w-100 d-flex flex-row">
                            <h5 class="modal-title w-100 fw-bold" id="modalTitleId">Up Load Your File</h5>
                            <button type="button" class="btn-close w-5" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                    </div>
                    <div class="modal-body">
                        <div class="container-fluid">
                                <div class="mb-3 d-flex flex-column justify-content-center align-items-center" id="drop-area">
                                <p class=" fs-6 fw-semibold m-0">
                                    Drag & Drop files here or 
                                    <span class="text-primary text-decoration-underline" 
                                        id="click-span" style="cursor: pointer;">
                                        click
                                    </span> 
                                    to select
                                </p>
                                <input type="file" id="fileInput" class="d-none" name="FileInput" multiple >
                                <input type="hidden" name="id" id="id" value="{{account.UID}}" />
                                <div class="w-100">
                                    <ul id="file-list" class="d-none"></ul>
                                </div>
                            </div>
                            
                            <button class="btn btn-outline-primary text-start" type="submit" autocomplete="off" style="border: 2px solid; max-width: 60%; float:right;"> 
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-send" viewBox="0 0 16 16">
                                    <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
                                </svg>    
                                Save
                            </button>
                        </div>
                    </div>

                </div>
            </div>
        </form>
    </div>
    
    <script>
        var fileStorage = [];
        // JavaScript for handling drag-and-drop functionality
        document.getElementById('drop-area').addEventListener('dragover', function (e) {
            e.preventDefault();
            this.classList.add('hover');
        });
    
        document.getElementById('drop-area').addEventListener('dragleave', function (e) {
            e.preventDefault();
            this.classList.remove('hover');
        });
    
        document.getElementById('drop-area').addEventListener('drop', function (e) {
            e.preventDefault();
            this.classList.remove('hover');
    
            var files = e.dataTransfer.files;
            handleFiles(files);
        });
    
        // Handling file input change
        document.getElementById('fileInput').addEventListener('change', function () {
            var files = this.files;
            handleFiles(files);
        });

        // Additional handling for clicking the drop area to trigger file input
        document.getElementById('click-span').addEventListener('click', function () {
            document.getElementById('fileInput').click();
        });
    
        function handleFiles(files) {
            var fileList = document.getElementById('file-list');
            fileList.classList.remove('d-none');
    
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var listItem = document.createElement('li');
                listItem.className = 'file-item';
                listItem.textContent = file.name;
                fileList.appendChild(listItem);

                fileStorage.push(file);
            }
        }

        document.getElementById('ReportForm').addEventListener('submit', function (e) {
            e.preventDefault();
    
            // Gather all files from the fileStorage array
            var files = fileStorage;
    
            // Create a FormData object to append files
            var formData = new FormData();
    
            for (var i = 0; i < files.length; i++) {
                formData.append('files', files[i]);
            }
    
            formData.append('id', document.getElementById('id').value);
            // Use Fetch API to send files to the server
            fetch('/upload', {
                method: 'POST',
                body: formData,
            })
                .then(response => response.text())
                .then(data => {
                    console.log(data);
                    // Optionally, reset the fileStorage array and clear the file list
                    fileStorage = [];
                    document.getElementById('file-list').innerHTML = '';
                    location.reload();
                })
                .catch(error => console.error('Error uploading files:', error));
        });

        async function accSettings(e) {
            e.preventDefault()

            const formData = new FormData(document.getElementById("formAccountSettings"))
            const data = Object.fromEntries(formData.entries())

            let res = await fetch('/home/personalInfo', {
                method: 'PUT',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data)
            })

            location.reload();
        }
    </script>